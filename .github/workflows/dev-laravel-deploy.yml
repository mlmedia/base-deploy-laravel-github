#####
# Laravel deployment to DEV / TESTING environment
#####
#
# NOTE: to make this work, you need to set the secrets in Settings -> Secrets for the following:
#
# - DEV_DOT_ENV: you'll also need to add your Laravel env file so it can be deployed along with the code (you should never store secrets in git).
# - DEV_SSH_KEY (the PRIVATE key passed from the local machine and created specifically for this deployment)
# -- NOTES: generate a new key locally with the following command:
# ---- `ssh-keygen -t rsa -b 4096 -f ~/.ssh/github-deploy-laravel-generic -C github-deploy-laravel-generic@yourcomputer` (do not add a passphrase)
# -- this key must be created locally and the PUBLIC key added to the deployment keys in GitHub in Settings -> Deploy Keys
# ---- `cat ~/.ssh/github-deploy-laravel-generic.pub`
# -- the PRIVATE key is saved in order to "fake" the SSH conection Git pull used by GitHub Actions
# ---- `cat ~/.ssh/github-deploy-laravel-generic`
# -- you also must add the PUBLIC key to the server in /home/deploy/.ssh/authorized_keys
# - DEV_KNOWN_HOSTS: Add the KNOWN_HOSTS variable to avoid man-in-the-middle attacks.
# -- NOTE: You can find you server's host fingerprint by running `ssh-keyscan rsa -t <server IP>` on your local machine after SSH'ing in for the first time to your server and setting the value


name: Laravel CI/CD via GitHub Actions

on:
  push:
    branches: [ dev ]

jobs:

  build-js:
    name: Build Js/Css
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Yarn Build
        run: |
          yarn install
          yarn prod
          cat public/mix-manifest.json # See asset versions in log
      - name: Upload build files
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public 

  test-php:
    name: Test/Lint PHP
    runs-on: ubuntu-latest
    needs: build-js
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.3 # Use your PHP version
          extensions: mbstring, bcmath # Setup any required extensions for tests
      - name: Composer install
        run: composer install
      - name: Run Tests
        run: ./vendor/bin/phpunit

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-js, test-php]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: Download build assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.3 # Use your PHP version
          extension-csv: mbstring, bcmath
      - name: Composer install
        run: composer install
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.DEV_SSH_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy to Prod
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: dep deploy production --tag=${{ env.GITHUB_REF }} -vvv